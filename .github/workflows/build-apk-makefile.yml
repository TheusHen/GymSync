name: Build APK

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y curl git unzip xz-utils zip make libglu1-mesa libc6:amd64 libstdc++6:amd64 lib32z1 libbz2-1.0:amd64

      - name: Download and set up Flutter
        run: |
          curl -O https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.32.6-stable.tar.xz
          tar xf flutter_linux_3.32.6-stable.tar.xz
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          export PATH="$PWD/flutter/bin:$PATH"
          flutter --version

      - name: Verify environments
        run: |
          flutter --version
          dart --version
          node --version
          npm --version

      - name: Build APK with Makefile
        run: make apk

      - name: Check if APK was generated
        run: |
          if [ ! -f apps/mobile_app/build/app/outputs/flutter-apk/app-release.apk ]; then
            echo "APK not found!"
            exit 1
          fi

      - name: Ensure Android SDK & Build Tools
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Build Espresso test APK
        run: |
          cd apps/mobile_app/android
          ./gradlew assembleDebug assembleDebugAndroidTest -x lint -x test -x connectedAndroidTest
          cd ../../../

      - name: Detect AndroidTest APK location
        id: detect_apk
        run: |
          set -e
          POSSIBLE_PATHS=(
            "apps/mobile_app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk"
            "apps/mobile_app/build/app/outputs/flutter-apk/app-debug-androidTest.apk"
            "apps/mobile_app/android/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk"
            "apps/mobile_app/build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk"
            "apps/mobile_app/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk"
          )
          APK_PATH=""
          for path in "${POSSIBLE_PATHS[@]}"; do
            if [ -f "$path" ]; then
              APK_PATH="$path"
              break
            fi
          done
          if [ -z "$APK_PATH" ]; then
            FOUND=$(find apps/mobile_app -name "app-debug-androidTest.apk" | head -n 1)
            if [ -n "$FOUND" ]; then
              APK_PATH="$FOUND"
            fi
          fi
          if [ -z "$APK_PATH" ]; then
            echo "AndroidTest APK not found in any known location!"
            exit 1
          fi
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Upload app APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: apps/mobile_app/build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Espresso test APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: espresso-test-apk
          path: ${{ steps.detect_apk.outputs.apk_path }}
