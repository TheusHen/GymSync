name: Build APK with Makefile, Capture Preview and Run with Logs

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_apk:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y curl git unzip xz-utils zip make libglu1-mesa libc6:amd64 libstdc++6:amd64 lib32z1 libbz2-1.0:amd64

      - name: Download and set up Flutter
        run: |
          curl -O https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.32.6-stable.tar.xz
          tar xf flutter_linux_3.32.6-stable.tar.xz
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          export PATH="$PWD/flutter/bin:$PATH"
          flutter --version

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Verify environments
        run: |
          flutter --version
          dart --version
          node --version
          npm --version

      - name: Build APK with Makefile
        run: make apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: apps/mobile_app/build/app/outputs/flutter-apk/app-release.apk

  capture_preview:
    needs: build_apk
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: ./apk/

      - name: Start Android emulator and capture preview screenshots
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: default
          arch: arm64-v8a
          profile: pixel
          disable-animations: true
          script: |
            set -x
            adb wait-for-device
            adb install ./apk/app-release.apk
            adb shell monkey -v -p com.example.mobile_app -c android.intent.category.LAUNCHER 1

            echo "Waiting for the app to load..."
            sleep 10

            echo "Capturing screenshots..."
            mkdir -p previews
            adb exec-out screencap -p > previews/screen1.png
            sleep 2
            adb exec-out screencap -p > previews/screen2.png
            sleep 2
            adb exec-out screencap -p > previews/screen3.png

            zip -r preview_screenshots.zip previews/

      - name: Upload screenshots artifact
        uses: actions/upload-artifact@v4
        with:
          name: preview-screenshots
          path: preview_screenshots.zip

  run_apk_with_logs:
    needs: build_apk
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: ./apk/

      - name: Start Android emulator and run APK with live logcat
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: default
          arch: arm64-v8a
          profile: pixel
          disable-animations: true
          script: |
            set -x
            adb wait-for-device
      
            echo "Installing APK..."
            adb install ./apk/app-release.apk
      
            echo "Starting logcat in background..."
            adb logcat -v time > live_logcat.txt &
            LOGCAT_PID=$!
      
            echo "Launching app..."
            adb shell monkey -v -p com.example.mobile_app -c android.intent.category.LAUNCHER 1
      
            echo "Letting it run for 15 seconds..."
            sleep 15
      
            echo "Stopping logcat..."
            kill $LOGCAT_PID || true
      
            echo "Showing last 50 lines of logcat output:"
            tail -n 50 live_logcat.txt

      - name: Upload logcat output
        uses: actions/upload-artifact@v4
        with:
          name: live-logcat
          path: live_logcat.txt
